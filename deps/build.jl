using BinaryProvider

# This is where all binaries will get installed
const prefix = Prefix(!isempty(ARGS) ? ARGS[1] : joinpath(@__DIR__,"usr"))

libsundials_nvecserial       = LibraryProduct(prefix, String["libsundials_nvecserial"])
libsundials_kinsol           = LibraryProduct(prefix, String["libsundials_kinsol"])
libsundials_cvodes           = LibraryProduct(prefix, String["libsundials_cvodes"])
libsundials_idas             = LibraryProduct(prefix, String["libsundials_idas"])
libsundials_sunlinsolspfgmr  = LibraryProduct(prefix, String["libsundials_sunlinsolspfgmr"])
libsundials_sunmatrixdense   = LibraryProduct(prefix, String["libsundials_sunmatrixdense"])
libsundials_sunlinsolspbcgs  = LibraryProduct(prefix, String["libsundials_sunlinsolspbcgs"])
libsundials_sunlinsoldense   = LibraryProduct(prefix, String["libsundials_sunlinsoldense"])
libsundials_sunlinsolspgmr   = LibraryProduct(prefix, String["libsundials_sunlinsolspgmr"])
libsundials_sunlinsolpcg     = LibraryProduct(prefix, String["libsundials_sunlinsolpcg"])
libsundials_sunlinsolsptfqmr = LibraryProduct(prefix, String["libsundials_sunlinsolsptfqmr"])
libsundials_sunmatrixsparse  = LibraryProduct(prefix, String["libsundials_sunmatrixsparse"])
libsundials_sunlinsolband    = LibraryProduct(prefix, String["libsundials_sunlinsolband"])
libsundials_sunmatrixband    = LibraryProduct(prefix, String["libsundials_sunmatrixband"])
libsundials_arkode           = LibraryProduct(prefix, String["libsundials_arkode"])
libsundials_sunlinsolklu     = LibraryProduct(prefix, String["libsundials_klu"])

products = [
libsundials_nvecserial,
libsundials_kinsol,
libsundials_cvodes,
libsundials_idas,
libsundials_sunlinsolspfgmr,
libsundials_sunmatrixdense,
libsundials_sunlinsolspbcgs,
libsundials_sunlinsoldense,
libsundials_sunlinsolspgmr,
libsundials_sunlinsolpcg,
libsundials_sunlinsolsptfqmr,
libsundials_sunmatrixsparse,
libsundials_sunlinsolband,
libsundials_sunmatrixband,
libsundials_arkode,
libsundials_sunlinsolklu,
]

# Download binaries from hosted location
bin_prefix = "https://github.com/JuliaDiffEq/SundialsBuilder/releases/download/dummy-0.0.3"

# Listing of files generated by BinaryBuilder:
download_info = Dict(
    BinaryProvider.Linux(:aarch64, :glibc) => ("$bin_prefix/Sundials.aarch64-linux-gnu.tar.gz", "9c0f4412c57c70c8369c3d768232a18c96e2c32c1aae8d8d5ca9d4dbecc3bcaf"),
    BinaryProvider.Linux(:armv7l, :glibc) => ("$bin_prefix/Sundials.arm-linux-gnueabihf.tar.gz", "66142267f1d977529079d18fd62b7afcff0e66b853edb53d3cb85b99a507af0d"),
    BinaryProvider.Linux(:i686, :glibc) => ("$bin_prefix/Sundials.i686-linux-gnu.tar.gz", "cfc0107382c2a2b457b22a2708922fbdceecc84955bb51dc812c9751e0e36947"),
    BinaryProvider.Windows(:i686) => ("$bin_prefix/Sundials.i686-w64-mingw32.tar.gz", "14376f0f6a3017a3f7a2648d661ba80d99d9d4f5fb4ea393d925366551e3e512"),
    BinaryProvider.Linux(:powerpc64le, :glibc) => ("$bin_prefix/Sundials.powerpc64le-linux-gnu.tar.gz", "a209d29624296534c0c64bf4057737faa8725703cce7a2e8343815083df78d13"),
    BinaryProvider.MacOS() => ("$bin_prefix/Sundials.x86_64-apple-darwin14.tar.gz", "cc15c458d73fb32d406c4e88b1478e0a1eaaf90a4675d91241224c3121ace343"),
    BinaryProvider.Linux(:x86_64, :glibc) => ("$bin_prefix/Sundials.x86_64-linux-gnu.tar.gz", "f34ad4faa4d0c9841e15348a48c8ab5780af56da23af9d46274192c6bbcf1049"),
    BinaryProvider.Windows(:x86_64) => ("$bin_prefix/Sundials.x86_64-w64-mingw32.tar.gz", "53ec20ef6430ed3c9891ccb2b9b3fae3a7947dc153a1adf8d7d5e158bed6fb23"),
)
if platform_key() in keys(download_info)
    # First, check to see if we're all satisfied
    if any(!satisfied(p; verbose=true) for p in products)
        # Download and install binaries
        url, tarball_hash = download_info[platform_key()]
        install(url, tarball_hash; prefix=prefix, force=true, verbose=true)
    end

    # Finally, write out a deps.jl file that will contain mappings for each
    # named product here: (there will be a "libfoo" variable and a "fooifier"
    # variable, etc...)
    @write_deps_file libsundials_kinsol libsundials_idas libsundials_nvecserial libsundials_cvodes libsundials_sunlinsolspfgmr  libsundials_sunmatrixdense libsundials_sunlinsolspbcgs libsundials_sunlinsoldense libsundials_sunlinsolspgmr  libsundials_sunlinsolpcg libsundials_sunlinsolsptfqmr libsundials_sunmatrixsparse libsundials_sunlinsolband libsundials_sunmatrixband libsundials_arkode libsundials_sunlinsolklu
else
    error("Your platform $(Sys.MACHINE) is not supported by this package!")
end
